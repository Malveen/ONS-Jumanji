var BrowserFunctions = {
	details : function() {
		var userAgent = navigator.userAgent;
		var tem;
		var M = userAgent
				.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)
				|| [];
		var browserDetails = new Object();
		if (/trident/i.test(M[1])) {
			tem = /\brv[ :]+(\d+)/g.exec(userAgent) || [];
			browserDetails.version = (tem[1] || '');
			browserDetails.name = 'MSIE';
			return browserDetails;
		}
		if (M[1] === 'Chrome') {
			tem = userAgent.match(/\b(OPR|Edge)\/(\d+)/);
			if (tem != null)
				return tem.slice(1).join(' ').replace('OPR', 'Opera');
		}
		M = M[2] ? [ M[1], M[2] ] : [ navigator.appName, navigator.appVersion,
				'-?' ];
		if ((tem = userAgent.match(/version\/(\d+)/i)) != null)
			M.splice(1, 1, tem[1]);
		browserDetails.name = M[0];
		browserDetails.version = M[1];
		return browserDetails;
	},
	// isBrowserSupported()
	// Use global mappping(browser,version) to match the browser and version to
	// the current browser.
	// return true/false
	isBrowserSupported : function() {
		var BrowserDetails = BrowserFunctions.details();
		var version = parseInt(BrowserDetails.version);
		var browserName = BrowserDetails.name.toLowerCase();

		var supported = false;

		if (version >= browsersArray[browserName]) {
			supported = true;
		}
		return supported;
	}
};

// checkCookie()
// Check whether the cookie name exists in the browser session
// return true/false
function checkCookie(cookieName) {
	var arr = document.cookie.split(';');
	var exists = false;

	for (var i = 0; i < arr.length; i++) {
		var cookie = arr[i];

		if (cookie.match(cookieName)) {
			exists = true;
			break;
		}
	}
	return exists;
}
// setCookie(cookieName, cookieValue)
// Create a session only cookie for given name
function setCookie(cookieName, cookieValue) {
	var c_value = escape(cookieValue);
	document.cookie = cookieName + "=" + c_value + ";path=/";
}

// closeBanner(bannerid)
// Close the currently rendered banner
function closeBanner(bannerid) {
	AUI().one('#' + bannerid).remove();
}
// closeUnsupportedBanner()
// Close the unsupported browser banner and create the session cookie
function closeUnsupportedBanner() {
	closeBanner('edcw-browser-notice');
	setCookie('BROWSER_VERSION', "");
}

// Alloy Interface ready()
// Render banner if required after browser loading is complete
Liferay.on('allPortletsReady', function() {
	AUI().ready(
			function(A) {
				if (!BrowserFunctions.isBrowserSupported()
						&& !checkCookie('BROWSER_VERSION')) {
					A.one('.edcw-browser-notice').setStyle('display', 'block');
				}
			})
});
